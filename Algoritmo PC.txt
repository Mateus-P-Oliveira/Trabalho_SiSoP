Algoritmo PC
CODIGO		R1	R2	  P  	LINHA		COMENTARIO
LDI 	    0	  -1  	31	    0		#Valor das repetições no Loop
LDI		    1	  -1	  32	    1		#Linha do salto do jump
LDI		    2	  -1	  20	    2		#Valor inicial que vai ser utilizado pelo LDD para puxar da memoria
LDI		    3 	-1	  21	    3		#Valor inicial que vai ser utilziado pelo LDD para puxar da memoria
LDI		    7	  -1	  28	    4		#Posição onde sempre vou salvar o registrador da subtração
#Coloca elementos no vetor
LDI		    4	  -1	   X 	    5		#Coloca nos registradores o valor que sera usado
STD		    4	  -1	  20 	    6		#Salva na memoria aqueles valores
LDI		    4	  -1	   X 	    7		#Coloca nos registradores o valor que sera usado
STD		    4	  -1	  21 	    8		#Salva na memoria aqueles valores
LDI		    4	  -1	   X 	    9		#Coloca nos registradores o valor que sera usado
STD		    4	  -1	  22 	    10	#Salva na memoria aqueles valores
LDI		    4	  -1	   X 	    11	#Coloca nos registradores o valor que sera usado
STD		    4	  -1	  23 	    12	#Salva na memoria aqueles valores
LDI		    4	  -1	   X 	    13	#Coloca nos registradores o valor que sera usado
STD		    4	  -1	  24 	    14	#Salva na memoria aqueles valores
LDI		    4	  -1	   X 	    15	#Coloca nos registradores o valor que sera usado
STD		    4	  -1	  25 	    16	#Salva na memoria aqueles valores
LDI		    4	  -1	   X 	    17	#Coloca nos registradores o valor que sera usado
STD		    4	  -1	  26 	    18	#Salva na memoria aqueles valores
LDI		    4	  -1	  -1	    19	#Salvo a posição final que ira para o loop
STD		    4	  -1	  27	    20	#Salvo na memoria onde isso ira ocorrer
#Faz o bubbleSort do algoritmo
JMPIL		  6	   0	  -1      21	#Se chegar na posição 27 da memoria ele ira ler o -1 e sair do loop	
LDX		    5	  -1	   2	    22	#Puxa da memoria a posição do inicio do codigo
LDX		    6	  -1	   3	    23	#Puxa da memoria a posição do inicio do codigo
STD		    6	  -1	  28	    24	#Salvo na posição 27 o valor do R6
SUB		    6	   5	  -1	    25	#Faço a comparação do Bubble Sort. Se for menor que zero faço a mudança da posição 6 = 6 - 5 < 0 o 5 é maior que o 6
JMPIL		  6	   1  	-1	    26	#Se for menor que zero salto para a troca
LDX		    6	  -1	   7	    27	#Puxa da memoria a posição que salvei o registrador que foi atualizado
ADDI		  2	  -1	   1	    28	#Mover na posição da memoria
ADDI		  3 	-1	   1	    29	#Mover na posição da memoria
JMP		   -1	  -1	  21	    30	#Pula para o inicio desse loop
#Paro o programa
STOP		-1	  -1	  -1	    31	#Para o programa
#Faz o swap
LDX		   6	  -1	   7	    32	#Puxa da memoria a posição que salvei o registrador que foi atualizado
STX		   2	   6	  -1      33	#Salva na memoria o valor menor
STX		   3	   5	  -1	    34	#Salva na memoria o valor maior
ADDI		 2	  -1	   1	    35	#Mover na posição da memoria
ADDI		 3	  -1	   1	    36	#Mover na posição da memoria
JMP		  -1	  -1	  21      37	#Pula de volta para o loop realizar os testes de bubble sort
#STOP caso de problema no JUMP
STOP		-1	  -1	  -1	    38	#Para o programa
